// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HeaderBar should render the Header Bar correctly 1`] = `
<View
  style={
    Object {
      "height": 55,
      "marginTop": 22,
      "width": "100%",
    }
  }
>
  <Modal
    animationType="slide"
    hardwareAccelerated={true}
    onRequestClose={[Function]}
    transparent={false}
    visible={false}
  >
    <View
      style={
        Object {
          "backgroundColor": "#444",
          "height": "100%",
          "paddingTop": 22,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "white",
              "fontSize": 24,
              "padding": 10,
            }
          }
        >
          Code examples
        </Text>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "white",
                "fontSize": 30,
                "padding": 5,
              }
            }
          >
            âœ•
          </Text>
        </View>
      </View>
      <RCTScrollView
        ItemSeparatorComponent={[Function]}
        ListFooterComponent={[Function]}
        ListHeaderComponent={[Function]}
        data={
          Array [
            Object {
              "code": "someCode();",
              "key": "Example 1",
              "runtimeComplexity": "O(1)",
              "spaceComplexity": "O(n)",
            },
            Object {
              "code": "someMoreCode();",
              "key": "Example 2",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onViewableItemsChanged={undefined}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#666",
                  "height": 1,
                  "marginLeft": "3%",
                  "width": "94%",
                }
              }
            />
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Object {
                    "paddingHorizontal": 15,
                    "paddingVertical": 12,
                  },
                ]
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "white",
                    }
                  }
                >
                  Example 1
                </Text>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "white",
                      "marginLeft": 10,
                      "opacity": 0.7,
                    }
                  }
                >
                  Runtime:
                  O(1)
                  , Space:
                  O(n)
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "#666",
                  "height": 1,
                  "marginLeft": "3%",
                  "width": "94%",
                }
              }
            />
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Object {
                    "paddingHorizontal": 15,
                    "paddingVertical": 12,
                  },
                ]
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "white",
                    }
                  }
                >
                  Example 2
                </Text>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "white",
                      "marginLeft": 10,
                      "opacity": 0.7,
                    }
                  }
                >
                  Runtime:
                  , Space:
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "backgroundColor": "#666",
                  "height": 1,
                  "marginLeft": "3%",
                  "width": "94%",
                }
              }
            />
          </View>
        </View>
      </RCTScrollView>
    </View>
  </Modal>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginHorizontal": 5,
      }
    }
  >
    <View
      style={
        Object {
          "paddingBottom": 5,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#fff",
              "fontSize": 20,
              "padding": 8,
            }
          }
        >
          Code examples
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "padding": 5,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Image
        source={1}
        style={
          Object {
            "height": 40,
            "width": 40,
          }
        }
      />
    </View>
  </View>
</View>
`;
