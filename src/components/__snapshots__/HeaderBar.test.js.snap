// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HeaderBar should render the Header Bar correctly 1`] = `
<View
  style={
    Object {
      "height": 55,
      "marginTop": 20,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginHorizontal": 10,
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Image
        source={
          Object {
            "testUri": "../../../assets/hamburger.png",
          }
        }
        style={
          Object {
            "height": 35,
            "tintColor": "white",
            "width": 35,
          }
        }
      />
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "flexGrow": 1,
          "fontSize": 22,
          "textAlign": "center",
        }
      }
    >
      JS Code Run
    </Text>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "flex-end",
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
            "padding": 5,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Image
          source={
            Object {
              "testUri": "../../../assets/save-icon.png",
            }
          }
          style={
            Object {
              "height": 25,
              "tintColor": "white",
              "width": 25,
            }
          }
        />
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Image
          source={
            Object {
              "testUri": "../../../assets/run.png",
            }
          }
          style={
            Object {
              "height": 35,
              "tintColor": "white",
              "width": 35,
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;
